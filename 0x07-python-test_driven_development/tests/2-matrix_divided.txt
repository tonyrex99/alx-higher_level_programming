The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Import function from module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test Valid Division:

	>>> matrix = [[2,5,7], [4,5,6]]
	>>> print(matrix_divided(matrix, 3))
	[[0.67, 1.67, 2.33], [1.33, 1.67, 2.0]]

Test empty matrix:

	>>> print(matrix_divided([], 3))
	[]

Test division by 0:

	>>> print(matrix_divided([], 0))
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	  File "/home/sneha/holbertonschool-higher_level_programming/0x07-python	-test_driven_development/2-matrix_divided.py", line 6, in matrix_divided
		raise ZeroDivisionError("division by zero")
	ZeroDivisionError: division by zero

Test Invalid row:

	>>> print(matrix_divided([[1,2,3], "Asf"], 3))
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	  File "/home/sneha/holbertonschool-higher_level_programming/0x07-python	-test_driven_development/2-matrix_divided.py", line 13, in matrix_divide	d
		raise TypeError("matrix must be a matrix (list of lists) of inte	gers/floats")
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test unequal rows:

	>>> matrix_divided([[1, 2, 4], [3, 5]], 3)
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	  File "/home/sneha/holbertonschool-higher_level_programming/0x07-python	-test_driven_development/2-matrix_divided.py", line 17, in matrix_divide	d
		raise TypeError("Each row of the matrix must have the same size"	)
	TypeError: Each row of the matrix must have the same size

Test empty matrix:

	>>> print(matrix_divided([], 3))
	[]
